package ru.makkez.learning.leetcode.easy;

/**
 * Римские цифры обозначаются семью разными символами: I, V, X, L, C, D и M.
 *
 * Значение       Символ
 * I 1
 * V 5
 * X 10
 * L 50
 * C 100
 * D 500
 * M 1000
 * Например, 2 в римской системе счисления записывается как II, то есть как два единицы, сложенные вместе. 12 записывается как XII, то есть просто X + II. Число 27 записывается как XXVII, то есть XX + V + II.
 * Римские цифры обычно записываются от большего к меньшему слева направо. Однако цифра четыре записывается не как IIII. Вместо этого число четыре записывается как IV. Поскольку единица стоит перед пятёркой, мы вычитаем её, получая четыре. Тот же принцип применяется к числу девять, которое записывается как IX. Есть шесть случаев, когда используется вычитание:
 *
 * I можно поставить перед V (5) и X (10), чтобы получить 4 и 9.
 * X можно поставить перед L (50) и C (100), чтобы получилось 40 и 90.
 * C можно поставить перед D (500) и M (1000), чтобы получилось 400 и 900.
 * Если задана римская цифра, преобразуйте ее в целое число.
 *
 * Пример 1:
 * Ввод: s = «III»
 * Вывод: 3
 * Объяснение: III = 3.
 *
 * Пример 2:
 * Ввод: s = "LVIII"
 * Вывод:58
 * Пояснение: L = 50, V= 5, III = 3.
 *
 * Пример 3:
 * Входные данные: s = "MCMXCIV"
 * Результат:1994
 * Пояснение: M = 1000, CM = 900, XC = 90 и IV = 4.
 *
 * Ограничения:
 * 1 <= s.length <= 15
 * s содержит только символы ('I', 'V', 'X', 'L', 'C', 'D', 'M').
 * Гарантируется, что s в диапазоне допустима римская цифра [1, 3999].
 */
public class RomanToInteger {
    public int romanToInt(String s) {
        int res = 0;
        char prev = 0, ch;
        for (int i = s.length() - 1; i >= 0; i--) {
            ch = s.charAt(i);
            switch (ch) {
                case 'I':
                    if (prev == 'V' || prev == 'X') { res -= 1; }
                    else { res += 1; }
                    break;
                case 'V': res += 5; break;
                case 'X':
                    if (prev == 'L' || prev == 'C') { res -= 10; }
                    else { res += 10; }
                    break;
                case 'L': res += 50; break;
                case 'C':
                    if (prev == 'D' || prev == 'M') { res -= 100; }
                    else { res += 100; }
                    break;
                case 'D': res += 500; break;
                case 'M': res += 1000; break;
            }
            prev = ch;
        }
        return res;
    }
}
